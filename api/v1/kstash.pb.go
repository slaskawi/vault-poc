// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: kstash.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CipherType is the type of cipher used to perform encryption.
type CipherType int32

const (
	CipherType_AES256_GCM CipherType = 0
)

// Enum value maps for CipherType.
var (
	CipherType_name = map[int32]string{
		0: "AES256_GCM",
	}
	CipherType_value = map[string]int32{
		"AES256_GCM": 0,
	}
)

func (x CipherType) Enum() *CipherType {
	p := new(CipherType)
	*p = x
	return p
}

func (x CipherType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CipherType) Descriptor() protoreflect.EnumDescriptor {
	return file_kstash_proto_enumTypes[0].Descriptor()
}

func (CipherType) Type() protoreflect.EnumType {
	return &file_kstash_proto_enumTypes[0]
}

func (x CipherType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CipherType.Descriptor instead.
func (CipherType) EnumDescriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{0}
}

// Permission for an ACL.
type Permission int32

const (
	Permission_DENY   Permission = 0
	Permission_LIST   Permission = 1
	Permission_READ   Permission = 2
	Permission_CREATE Permission = 3
	Permission_UPDATE Permission = 4
	Permission_DELETE Permission = 5
)

// Enum value maps for Permission.
var (
	Permission_name = map[int32]string{
		0: "DENY",
		1: "LIST",
		2: "READ",
		3: "CREATE",
		4: "UPDATE",
		5: "DELETE",
	}
	Permission_value = map[string]int32{
		"DENY":   0,
		"LIST":   1,
		"READ":   2,
		"CREATE": 3,
		"UPDATE": 4,
		"DELETE": 5,
	}
)

func (x Permission) Enum() *Permission {
	p := new(Permission)
	*p = x
	return p
}

func (x Permission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Permission) Descriptor() protoreflect.EnumDescriptor {
	return file_kstash_proto_enumTypes[1].Descriptor()
}

func (Permission) Type() protoreflect.EnumType {
	return &file_kstash_proto_enumTypes[1]
}

func (x Permission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Permission.Descriptor instead.
func (Permission) EnumDescriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{1}
}

// EncryptionKey holds the details for encrypting or decrypting an item.
type EncryptionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type    CipherType             `protobuf:"varint,2,opt,name=type,proto3,enum=kstash.v1.CipherType" json:"type,omitempty"`
	Key     []byte                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Created *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *EncryptionKey) Reset() {
	*x = EncryptionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionKey) ProtoMessage() {}

func (x *EncryptionKey) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionKey.ProtoReflect.Descriptor instead.
func (*EncryptionKey) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{0}
}

func (x *EncryptionKey) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EncryptionKey) GetType() CipherType {
	if x != nil {
		return x.Type
	}
	return CipherType_AES256_GCM
}

func (x *EncryptionKey) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *EncryptionKey) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

// KeychainSnapshot holds a snapshot of `pkg/barrier/keychain.Keychain`.
type KeychainSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Keys    []*EncryptionKey       `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Created *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *KeychainSnapshot) Reset() {
	*x = KeychainSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeychainSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeychainSnapshot) ProtoMessage() {}

func (x *KeychainSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeychainSnapshot.ProtoReflect.Descriptor instead.
func (*KeychainSnapshot) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{1}
}

func (x *KeychainSnapshot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeychainSnapshot) GetKeys() []*EncryptionKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *KeychainSnapshot) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

// BackendItem represents an item stored in a physical backend.
type BackendItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key             string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	EncryptionKeyID uint32 `protobuf:"varint,2,opt,name=encryptionKeyID,proto3" json:"encryptionKeyID,omitempty"`
	Val             []byte `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *BackendItem) Reset() {
	*x = BackendItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendItem) ProtoMessage() {}

func (x *BackendItem) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendItem.ProtoReflect.Descriptor instead.
func (*BackendItem) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{2}
}

func (x *BackendItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BackendItem) GetEncryptionKeyID() uint32 {
	if x != nil {
		return x.EncryptionKeyID
	}
	return 0
}

func (x *BackendItem) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

// Item represents an item retrieved from a physical backend and decrypted based on CipherInfo.
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string                `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Raw []byte                `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
	Map map[string]*anypb.Any `protobuf:"bytes,3,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{3}
}

func (x *Item) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Item) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *Item) GetMap() map[string]*anypb.Any {
	if x != nil {
		return x.Map
	}
	return nil
}

// ACL is an access control list for an access token.
type ACL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        string       `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Permissions []Permission `protobuf:"varint,2,rep,packed,name=permissions,proto3,enum=kstash.v1.Permission" json:"permissions,omitempty"`
}

func (x *ACL) Reset() {
	*x = ACL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACL) ProtoMessage() {}

func (x *ACL) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACL.ProtoReflect.Descriptor instead.
func (*ACL) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{4}
}

func (x *ACL) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ACL) GetPermissions() []Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// AccessToken an access token used for authentication and authorization.
type AccessToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReferenceID string            `protobuf:"bytes,2,opt,name=referenceID,proto3" json:"referenceID,omitempty"`
	Namespace   string            `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CreatedAt   int64             `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	EnabledAt   int64             `protobuf:"varint,5,opt,name=enabledAt,proto3" json:"enabledAt,omitempty"`
	ExpiresAt   int64             `protobuf:"varint,6,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Metadata    map[string]string `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Acls        []*ACL            `protobuf:"bytes,8,rep,name=acls,proto3" json:"acls,omitempty"`
}

func (x *AccessToken) Reset() {
	*x = AccessToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessToken) ProtoMessage() {}

func (x *AccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessToken.ProtoReflect.Descriptor instead.
func (*AccessToken) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{5}
}

func (x *AccessToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccessToken) GetReferenceID() string {
	if x != nil {
		return x.ReferenceID
	}
	return ""
}

func (x *AccessToken) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AccessToken) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AccessToken) GetEnabledAt() int64 {
	if x != nil {
		return x.EnabledAt
	}
	return 0
}

func (x *AccessToken) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *AccessToken) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AccessToken) GetAcls() []*ACL {
	if x != nil {
		return x.Acls
	}
	return nil
}

type AuthTokenLookupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenID          string `protobuf:"bytes,1,opt,name=tokenID,proto3" json:"tokenID,omitempty"`
	TokenReferenceID string `protobuf:"bytes,2,opt,name=tokenReferenceID,proto3" json:"tokenReferenceID,omitempty"`
}

func (x *AuthTokenLookupRequest) Reset() {
	*x = AuthTokenLookupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthTokenLookupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthTokenLookupRequest) ProtoMessage() {}

func (x *AuthTokenLookupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthTokenLookupRequest.ProtoReflect.Descriptor instead.
func (*AuthTokenLookupRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{6}
}

func (x *AuthTokenLookupRequest) GetTokenID() string {
	if x != nil {
		return x.TokenID
	}
	return ""
}

func (x *AuthTokenLookupRequest) GetTokenReferenceID() string {
	if x != nil {
		return x.TokenReferenceID
	}
	return ""
}

type AuthTokenLookupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *AccessToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AuthTokenLookupResponse) Reset() {
	*x = AuthTokenLookupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthTokenLookupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthTokenLookupResponse) ProtoMessage() {}

func (x *AuthTokenLookupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthTokenLookupResponse.ProtoReflect.Descriptor instead.
func (*AuthTokenLookupResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{7}
}

func (x *AuthTokenLookupResponse) GetToken() *AccessToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type AuthTokenRenewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenID          string `protobuf:"bytes,1,opt,name=tokenID,proto3" json:"tokenID,omitempty"`
	TokenReferenceID string `protobuf:"bytes,2,opt,name=tokenReferenceID,proto3" json:"tokenReferenceID,omitempty"`
	Ttl              string `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *AuthTokenRenewRequest) Reset() {
	*x = AuthTokenRenewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthTokenRenewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthTokenRenewRequest) ProtoMessage() {}

func (x *AuthTokenRenewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthTokenRenewRequest.ProtoReflect.Descriptor instead.
func (*AuthTokenRenewRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{8}
}

func (x *AuthTokenRenewRequest) GetTokenID() string {
	if x != nil {
		return x.TokenID
	}
	return ""
}

func (x *AuthTokenRenewRequest) GetTokenReferenceID() string {
	if x != nil {
		return x.TokenReferenceID
	}
	return ""
}

func (x *AuthTokenRenewRequest) GetTtl() string {
	if x != nil {
		return x.Ttl
	}
	return ""
}

type AuthTokenRenewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *AccessToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AuthTokenRenewResponse) Reset() {
	*x = AuthTokenRenewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthTokenRenewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthTokenRenewResponse) ProtoMessage() {}

func (x *AuthTokenRenewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthTokenRenewResponse.ProtoReflect.Descriptor instead.
func (*AuthTokenRenewResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{9}
}

func (x *AuthTokenRenewResponse) GetToken() *AccessToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type AuthTokenRevokeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenID          string `protobuf:"bytes,1,opt,name=tokenID,proto3" json:"tokenID,omitempty"`
	TokenReferenceID string `protobuf:"bytes,2,opt,name=tokenReferenceID,proto3" json:"tokenReferenceID,omitempty"`
}

func (x *AuthTokenRevokeRequest) Reset() {
	*x = AuthTokenRevokeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthTokenRevokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthTokenRevokeRequest) ProtoMessage() {}

func (x *AuthTokenRevokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthTokenRevokeRequest.ProtoReflect.Descriptor instead.
func (*AuthTokenRevokeRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{10}
}

func (x *AuthTokenRevokeRequest) GetTokenID() string {
	if x != nil {
		return x.TokenID
	}
	return ""
}

func (x *AuthTokenRevokeRequest) GetTokenReferenceID() string {
	if x != nil {
		return x.TokenReferenceID
	}
	return ""
}

type AuthTokenRevokeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthTokenRevokeResponse) Reset() {
	*x = AuthTokenRevokeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthTokenRevokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthTokenRevokeResponse) ProtoMessage() {}

func (x *AuthTokenRevokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthTokenRevokeResponse.ProtoReflect.Descriptor instead.
func (*AuthTokenRevokeResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{11}
}

type SystemGenerateAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey string            `protobuf:"bytes,1,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	Namespace string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	EnabledAt int64             `protobuf:"varint,3,opt,name=enabledAt,proto3" json:"enabledAt,omitempty"`
	ExpiresAt int64             `protobuf:"varint,4,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Metadata  map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Acls      []*ACL            `protobuf:"bytes,6,rep,name=acls,proto3" json:"acls,omitempty"`
}

func (x *SystemGenerateAccessTokenRequest) Reset() {
	*x = SystemGenerateAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemGenerateAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemGenerateAccessTokenRequest) ProtoMessage() {}

func (x *SystemGenerateAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemGenerateAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*SystemGenerateAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{12}
}

func (x *SystemGenerateAccessTokenRequest) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *SystemGenerateAccessTokenRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SystemGenerateAccessTokenRequest) GetEnabledAt() int64 {
	if x != nil {
		return x.EnabledAt
	}
	return 0
}

func (x *SystemGenerateAccessTokenRequest) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *SystemGenerateAccessTokenRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SystemGenerateAccessTokenRequest) GetAcls() []*ACL {
	if x != nil {
		return x.Acls
	}
	return nil
}

type SystemGenerateAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *AccessToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SystemGenerateAccessTokenResponse) Reset() {
	*x = SystemGenerateAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemGenerateAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemGenerateAccessTokenResponse) ProtoMessage() {}

func (x *SystemGenerateAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemGenerateAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*SystemGenerateAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{13}
}

func (x *SystemGenerateAccessTokenResponse) GetToken() *AccessToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type SystemGenerateGatekeeperTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnsealKeys []string `protobuf:"bytes,1,rep,name=unsealKeys,proto3" json:"unsealKeys,omitempty"`
}

func (x *SystemGenerateGatekeeperTokenRequest) Reset() {
	*x = SystemGenerateGatekeeperTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemGenerateGatekeeperTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemGenerateGatekeeperTokenRequest) ProtoMessage() {}

func (x *SystemGenerateGatekeeperTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemGenerateGatekeeperTokenRequest.ProtoReflect.Descriptor instead.
func (*SystemGenerateGatekeeperTokenRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{14}
}

func (x *SystemGenerateGatekeeperTokenRequest) GetUnsealKeys() []string {
	if x != nil {
		return x.UnsealKeys
	}
	return nil
}

type SystemGenerateGatekeeperTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatekeeperToken string `protobuf:"bytes,1,opt,name=gatekeeperToken,proto3" json:"gatekeeperToken,omitempty"`
}

func (x *SystemGenerateGatekeeperTokenResponse) Reset() {
	*x = SystemGenerateGatekeeperTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemGenerateGatekeeperTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemGenerateGatekeeperTokenResponse) ProtoMessage() {}

func (x *SystemGenerateGatekeeperTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemGenerateGatekeeperTokenResponse.ProtoReflect.Descriptor instead.
func (*SystemGenerateGatekeeperTokenResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{15}
}

func (x *SystemGenerateGatekeeperTokenResponse) GetGatekeeperToken() string {
	if x != nil {
		return x.GatekeeperToken
	}
	return ""
}

type SystemInitializeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumUnsealKeys           uint32 `protobuf:"varint,1,opt,name=numUnsealKeys,proto3" json:"numUnsealKeys,omitempty"`
	UnsealKeyThreshold      uint32 `protobuf:"varint,2,opt,name=unsealKeyThreshold,proto3" json:"unsealKeyThreshold,omitempty"`
	GenerateGatekeeperToken bool   `protobuf:"varint,3,opt,name=generateGatekeeperToken,proto3" json:"generateGatekeeperToken,omitempty"`
}

func (x *SystemInitializeRequest) Reset() {
	*x = SystemInitializeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInitializeRequest) ProtoMessage() {}

func (x *SystemInitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInitializeRequest.ProtoReflect.Descriptor instead.
func (*SystemInitializeRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{16}
}

func (x *SystemInitializeRequest) GetNumUnsealKeys() uint32 {
	if x != nil {
		return x.NumUnsealKeys
	}
	return 0
}

func (x *SystemInitializeRequest) GetUnsealKeyThreshold() uint32 {
	if x != nil {
		return x.UnsealKeyThreshold
	}
	return 0
}

func (x *SystemInitializeRequest) GetGenerateGatekeeperToken() bool {
	if x != nil {
		return x.GenerateGatekeeperToken
	}
	return false
}

type SystemInitializeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnsealKeys      []string `protobuf:"bytes,1,rep,name=unsealKeys,proto3" json:"unsealKeys,omitempty"`
	AccessKey       string   `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	GatekeeperToken string   `protobuf:"bytes,3,opt,name=gatekeeperToken,proto3" json:"gatekeeperToken,omitempty"`
}

func (x *SystemInitializeResponse) Reset() {
	*x = SystemInitializeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInitializeResponse) ProtoMessage() {}

func (x *SystemInitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInitializeResponse.ProtoReflect.Descriptor instead.
func (*SystemInitializeResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{17}
}

func (x *SystemInitializeResponse) GetUnsealKeys() []string {
	if x != nil {
		return x.UnsealKeys
	}
	return nil
}

func (x *SystemInitializeResponse) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *SystemInitializeResponse) GetGatekeeperToken() string {
	if x != nil {
		return x.GatekeeperToken
	}
	return ""
}

type SystemRotateAccessKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey  string   `protobuf:"bytes,1,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	UnsealKeys []string `protobuf:"bytes,2,rep,name=unsealKeys,proto3" json:"unsealKeys,omitempty"`
}

func (x *SystemRotateAccessKeyRequest) Reset() {
	*x = SystemRotateAccessKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemRotateAccessKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRotateAccessKeyRequest) ProtoMessage() {}

func (x *SystemRotateAccessKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRotateAccessKeyRequest.ProtoReflect.Descriptor instead.
func (*SystemRotateAccessKeyRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{18}
}

func (x *SystemRotateAccessKeyRequest) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *SystemRotateAccessKeyRequest) GetUnsealKeys() []string {
	if x != nil {
		return x.UnsealKeys
	}
	return nil
}

type SystemRotateAccessKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey string `protobuf:"bytes,1,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
}

func (x *SystemRotateAccessKeyResponse) Reset() {
	*x = SystemRotateAccessKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemRotateAccessKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRotateAccessKeyResponse) ProtoMessage() {}

func (x *SystemRotateAccessKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRotateAccessKeyResponse.ProtoReflect.Descriptor instead.
func (*SystemRotateAccessKeyResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{19}
}

func (x *SystemRotateAccessKeyResponse) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

type SystemRotateEncryptionKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatekeeperToken string `protobuf:"bytes,1,opt,name=gatekeeperToken,proto3" json:"gatekeeperToken,omitempty"`
	Renew           bool   `protobuf:"varint,2,opt,name=renew,proto3" json:"renew,omitempty"`
}

func (x *SystemRotateEncryptionKeyRequest) Reset() {
	*x = SystemRotateEncryptionKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemRotateEncryptionKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRotateEncryptionKeyRequest) ProtoMessage() {}

func (x *SystemRotateEncryptionKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRotateEncryptionKeyRequest.ProtoReflect.Descriptor instead.
func (*SystemRotateEncryptionKeyRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{20}
}

func (x *SystemRotateEncryptionKeyRequest) GetGatekeeperToken() string {
	if x != nil {
		return x.GatekeeperToken
	}
	return ""
}

func (x *SystemRotateEncryptionKeyRequest) GetRenew() bool {
	if x != nil {
		return x.Renew
	}
	return false
}

type SystemRotateEncryptionKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemRotateEncryptionKeyResponse) Reset() {
	*x = SystemRotateEncryptionKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemRotateEncryptionKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRotateEncryptionKeyResponse) ProtoMessage() {}

func (x *SystemRotateEncryptionKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRotateEncryptionKeyResponse.ProtoReflect.Descriptor instead.
func (*SystemRotateEncryptionKeyResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{21}
}

type SystemRotateGatekeeperTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatekeeperToken string `protobuf:"bytes,1,opt,name=gatekeeperToken,proto3" json:"gatekeeperToken,omitempty"`
}

func (x *SystemRotateGatekeeperTokenRequest) Reset() {
	*x = SystemRotateGatekeeperTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemRotateGatekeeperTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRotateGatekeeperTokenRequest) ProtoMessage() {}

func (x *SystemRotateGatekeeperTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRotateGatekeeperTokenRequest.ProtoReflect.Descriptor instead.
func (*SystemRotateGatekeeperTokenRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{22}
}

func (x *SystemRotateGatekeeperTokenRequest) GetGatekeeperToken() string {
	if x != nil {
		return x.GatekeeperToken
	}
	return ""
}

type SystemRotateGatekeeperTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatekeeperToken string `protobuf:"bytes,1,opt,name=gatekeeperToken,proto3" json:"gatekeeperToken,omitempty"`
}

func (x *SystemRotateGatekeeperTokenResponse) Reset() {
	*x = SystemRotateGatekeeperTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemRotateGatekeeperTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRotateGatekeeperTokenResponse) ProtoMessage() {}

func (x *SystemRotateGatekeeperTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRotateGatekeeperTokenResponse.ProtoReflect.Descriptor instead.
func (*SystemRotateGatekeeperTokenResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{23}
}

func (x *SystemRotateGatekeeperTokenResponse) GetGatekeeperToken() string {
	if x != nil {
		return x.GatekeeperToken
	}
	return ""
}

type SystemRotateUnsealKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnsealKeys         []string `protobuf:"bytes,1,rep,name=unsealKeys,proto3" json:"unsealKeys,omitempty"`
	NumUnsealKeys      uint32   `protobuf:"varint,2,opt,name=numUnsealKeys,proto3" json:"numUnsealKeys,omitempty"`
	UnsealKeyThreshold uint32   `protobuf:"varint,3,opt,name=unsealKeyThreshold,proto3" json:"unsealKeyThreshold,omitempty"`
}

func (x *SystemRotateUnsealKeysRequest) Reset() {
	*x = SystemRotateUnsealKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemRotateUnsealKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRotateUnsealKeysRequest) ProtoMessage() {}

func (x *SystemRotateUnsealKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRotateUnsealKeysRequest.ProtoReflect.Descriptor instead.
func (*SystemRotateUnsealKeysRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{24}
}

func (x *SystemRotateUnsealKeysRequest) GetUnsealKeys() []string {
	if x != nil {
		return x.UnsealKeys
	}
	return nil
}

func (x *SystemRotateUnsealKeysRequest) GetNumUnsealKeys() uint32 {
	if x != nil {
		return x.NumUnsealKeys
	}
	return 0
}

func (x *SystemRotateUnsealKeysRequest) GetUnsealKeyThreshold() uint32 {
	if x != nil {
		return x.UnsealKeyThreshold
	}
	return 0
}

type SystemRotateUnsealKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnsealKeys []string `protobuf:"bytes,1,rep,name=unsealKeys,proto3" json:"unsealKeys,omitempty"`
}

func (x *SystemRotateUnsealKeysResponse) Reset() {
	*x = SystemRotateUnsealKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemRotateUnsealKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRotateUnsealKeysResponse) ProtoMessage() {}

func (x *SystemRotateUnsealKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRotateUnsealKeysResponse.ProtoReflect.Descriptor instead.
func (*SystemRotateUnsealKeysResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{25}
}

func (x *SystemRotateUnsealKeysResponse) GetUnsealKeys() []string {
	if x != nil {
		return x.UnsealKeys
	}
	return nil
}

type SystemSealRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatekeeperToken string `protobuf:"bytes,1,opt,name=gatekeeperToken,proto3" json:"gatekeeperToken,omitempty"`
	Renew           bool   `protobuf:"varint,2,opt,name=renew,proto3" json:"renew,omitempty"`
}

func (x *SystemSealRequest) Reset() {
	*x = SystemSealRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemSealRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemSealRequest) ProtoMessage() {}

func (x *SystemSealRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemSealRequest.ProtoReflect.Descriptor instead.
func (*SystemSealRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{26}
}

func (x *SystemSealRequest) GetGatekeeperToken() string {
	if x != nil {
		return x.GatekeeperToken
	}
	return ""
}

func (x *SystemSealRequest) GetRenew() bool {
	if x != nil {
		return x.Renew
	}
	return false
}

type SystemSealResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sealed bool `protobuf:"varint,1,opt,name=sealed,proto3" json:"sealed,omitempty"`
}

func (x *SystemSealResponse) Reset() {
	*x = SystemSealResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemSealResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemSealResponse) ProtoMessage() {}

func (x *SystemSealResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemSealResponse.ProtoReflect.Descriptor instead.
func (*SystemSealResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{27}
}

func (x *SystemSealResponse) GetSealed() bool {
	if x != nil {
		return x.Sealed
	}
	return false
}

type SystemStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemStatusRequest) Reset() {
	*x = SystemStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusRequest) ProtoMessage() {}

func (x *SystemStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusRequest.ProtoReflect.Descriptor instead.
func (*SystemStatusRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{28}
}

type SystemStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=serverTimestamp,proto3" json:"serverTimestamp,omitempty"`
	Initialized     bool                   `protobuf:"varint,2,opt,name=initialized,proto3" json:"initialized,omitempty"`
	Sealed          bool                   `protobuf:"varint,3,opt,name=sealed,proto3" json:"sealed,omitempty"`
}

func (x *SystemStatusResponse) Reset() {
	*x = SystemStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusResponse) ProtoMessage() {}

func (x *SystemStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusResponse.ProtoReflect.Descriptor instead.
func (*SystemStatusResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{29}
}

func (x *SystemStatusResponse) GetServerTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTimestamp
	}
	return nil
}

func (x *SystemStatusResponse) GetInitialized() bool {
	if x != nil {
		return x.Initialized
	}
	return false
}

func (x *SystemStatusResponse) GetSealed() bool {
	if x != nil {
		return x.Sealed
	}
	return false
}

type SystemUnsealRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnsealKeys           []string `protobuf:"bytes,1,rep,name=unsealKeys,proto3" json:"unsealKeys,omitempty"`
	GatekeeperToken      string   `protobuf:"bytes,2,opt,name=gatekeeperToken,proto3" json:"gatekeeperToken,omitempty"`
	RenewGatekeeperToken bool     `protobuf:"varint,3,opt,name=renewGatekeeperToken,proto3" json:"renewGatekeeperToken,omitempty"`
}

func (x *SystemUnsealRequest) Reset() {
	*x = SystemUnsealRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemUnsealRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemUnsealRequest) ProtoMessage() {}

func (x *SystemUnsealRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemUnsealRequest.ProtoReflect.Descriptor instead.
func (*SystemUnsealRequest) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{30}
}

func (x *SystemUnsealRequest) GetUnsealKeys() []string {
	if x != nil {
		return x.UnsealKeys
	}
	return nil
}

func (x *SystemUnsealRequest) GetGatekeeperToken() string {
	if x != nil {
		return x.GatekeeperToken
	}
	return ""
}

func (x *SystemUnsealRequest) GetRenewGatekeeperToken() bool {
	if x != nil {
		return x.RenewGatekeeperToken
	}
	return false
}

type SystemUnsealResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sealed bool `protobuf:"varint,1,opt,name=sealed,proto3" json:"sealed,omitempty"`
}

func (x *SystemUnsealResponse) Reset() {
	*x = SystemUnsealResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kstash_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemUnsealResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemUnsealResponse) ProtoMessage() {}

func (x *SystemUnsealResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kstash_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemUnsealResponse.ProtoReflect.Descriptor instead.
func (*SystemUnsealResponse) Descriptor() ([]byte, []int) {
	return file_kstash_proto_rawDescGZIP(), []int{31}
}

func (x *SystemUnsealResponse) GetSealed() bool {
	if x != nil {
		return x.Sealed
	}
	return false
}

var File_kstash_proto protoreflect.FileDescriptor

var file_kstash_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x4b, 0x65, 0x79,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12,
	0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x5b, 0x0a, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x22, 0xa4, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12,
	0x2a, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b,
	0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x4c, 0x0a, 0x08, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x52, 0x0a, 0x03, 0x41, 0x43, 0x4c,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6b, 0x73, 0x74, 0x61,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xda, 0x02,
	0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x73, 0x74, 0x61,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x04, 0x61, 0x63, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x43, 0x4c, 0x52, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5e, 0x0a, 0x16, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x2a,
	0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x17, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x6f, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x74, 0x6c, 0x22, 0x46, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5e, 0x0a, 0x16,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44,
	0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x19, 0x0a, 0x17,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd2, 0x02, 0x0a, 0x20, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x12, 0x55, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x04, 0x61,
	0x63, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x73, 0x74, 0x61,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x43, 0x4c, 0x52, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x1a,
	0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x51, 0x0a, 0x21,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x46, 0x0a, 0x24, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x73, 0x65, 0x61,
	0x6c, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x73,
	0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x51, 0x0a, 0x25, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65,
	0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa9, 0x01, 0x0a, 0x17, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x55, 0x6e, 0x73,
	0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e,
	0x75, 0x6d, 0x55, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c,
	0x4b, 0x65, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x38, 0x0a, 0x17,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70,
	0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x18, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x61, 0x74, 0x65,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5c, 0x0a, 0x1c, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x73,
	0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x3d, 0x0a, 0x1d, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x22, 0x62, 0x0a, 0x20, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x22, 0x23, 0x0a, 0x21,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4e, 0x0a, 0x22, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x4f, 0x0a, 0x23, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x1d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x65, 0x55, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c,
	0x4b, 0x65, 0x79, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x55, 0x6e, 0x73, 0x65, 0x61,
	0x6c, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x75, 0x6d,
	0x55, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x6e,
	0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65,
	0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x40, 0x0a, 0x1e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x73, 0x65, 0x61, 0x6c,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x53, 0x0a, 0x11,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x61, 0x74, 0x65,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x6e, 0x65,
	0x77, 0x22, 0x2c, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x6c, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x22,
	0x93, 0x01, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x6e, 0x73, 0x65, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x73, 0x65, 0x61,
	0x6c, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x73,
	0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65,
	0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x6e, 0x73, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x6c, 0x65, 0x64, 0x2a, 0x1c, 0x0a, 0x0a, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x45, 0x53, 0x32, 0x35, 0x36, 0x5f, 0x47, 0x43,
	0x4d, 0x10, 0x00, 0x2a, 0x4e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c,
	0x49, 0x53, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x05, 0x32, 0xe4, 0x0c, 0x0a, 0x06, 0x4b, 0x53, 0x74, 0x61, 0x73, 0x68, 0x12, 0x7a,
	0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x12, 0x21, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a, 0x0e, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x20, 0x2e, 0x6b,
	0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x3a,
	0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x21, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x9c,
	0x01, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x2e, 0x6b,
	0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x73, 0x74, 0x61,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22,
	0x19, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xad, 0x01,
	0x0a, 0x1d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x2f, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65,
	0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x2f,
	0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x7d, 0x0a,
	0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x12, 0x22, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x8f, 0x01, 0x0a,
	0x15, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x9f,
	0x01, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x2b, 0x2e, 0x6b,
	0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x73, 0x74, 0x61,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22,
	0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x2f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a,
	0x12, 0xa5, 0x01, 0x0a, 0x1b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2d, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65,
	0x70, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70,
	0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x65, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x65, 0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x73, 0x65, 0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x12,
	0x6a, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1e, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6b, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6d, 0x0a, 0x0c, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x12, 0x1e, 0x2e, 0x6b, 0x73,
	0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x6e,
	0x73, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6b, 0x73,
	0x74, 0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x6e,
	0x73, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6c, 0x61, 0x73, 0x6b, 0x61, 0x77,
	0x69, 0x2f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2d, 0x70, 0x6f, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kstash_proto_rawDescOnce sync.Once
	file_kstash_proto_rawDescData = file_kstash_proto_rawDesc
)

func file_kstash_proto_rawDescGZIP() []byte {
	file_kstash_proto_rawDescOnce.Do(func() {
		file_kstash_proto_rawDescData = protoimpl.X.CompressGZIP(file_kstash_proto_rawDescData)
	})
	return file_kstash_proto_rawDescData
}

var file_kstash_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kstash_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_kstash_proto_goTypes = []interface{}{
	(CipherType)(0),                               // 0: kstash.v1.CipherType
	(Permission)(0),                               // 1: kstash.v1.Permission
	(*EncryptionKey)(nil),                         // 2: kstash.v1.EncryptionKey
	(*KeychainSnapshot)(nil),                      // 3: kstash.v1.KeychainSnapshot
	(*BackendItem)(nil),                           // 4: kstash.v1.BackendItem
	(*Item)(nil),                                  // 5: kstash.v1.Item
	(*ACL)(nil),                                   // 6: kstash.v1.ACL
	(*AccessToken)(nil),                           // 7: kstash.v1.AccessToken
	(*AuthTokenLookupRequest)(nil),                // 8: kstash.v1.AuthTokenLookupRequest
	(*AuthTokenLookupResponse)(nil),               // 9: kstash.v1.AuthTokenLookupResponse
	(*AuthTokenRenewRequest)(nil),                 // 10: kstash.v1.AuthTokenRenewRequest
	(*AuthTokenRenewResponse)(nil),                // 11: kstash.v1.AuthTokenRenewResponse
	(*AuthTokenRevokeRequest)(nil),                // 12: kstash.v1.AuthTokenRevokeRequest
	(*AuthTokenRevokeResponse)(nil),               // 13: kstash.v1.AuthTokenRevokeResponse
	(*SystemGenerateAccessTokenRequest)(nil),      // 14: kstash.v1.SystemGenerateAccessTokenRequest
	(*SystemGenerateAccessTokenResponse)(nil),     // 15: kstash.v1.SystemGenerateAccessTokenResponse
	(*SystemGenerateGatekeeperTokenRequest)(nil),  // 16: kstash.v1.SystemGenerateGatekeeperTokenRequest
	(*SystemGenerateGatekeeperTokenResponse)(nil), // 17: kstash.v1.SystemGenerateGatekeeperTokenResponse
	(*SystemInitializeRequest)(nil),               // 18: kstash.v1.SystemInitializeRequest
	(*SystemInitializeResponse)(nil),              // 19: kstash.v1.SystemInitializeResponse
	(*SystemRotateAccessKeyRequest)(nil),          // 20: kstash.v1.SystemRotateAccessKeyRequest
	(*SystemRotateAccessKeyResponse)(nil),         // 21: kstash.v1.SystemRotateAccessKeyResponse
	(*SystemRotateEncryptionKeyRequest)(nil),      // 22: kstash.v1.SystemRotateEncryptionKeyRequest
	(*SystemRotateEncryptionKeyResponse)(nil),     // 23: kstash.v1.SystemRotateEncryptionKeyResponse
	(*SystemRotateGatekeeperTokenRequest)(nil),    // 24: kstash.v1.SystemRotateGatekeeperTokenRequest
	(*SystemRotateGatekeeperTokenResponse)(nil),   // 25: kstash.v1.SystemRotateGatekeeperTokenResponse
	(*SystemRotateUnsealKeysRequest)(nil),         // 26: kstash.v1.SystemRotateUnsealKeysRequest
	(*SystemRotateUnsealKeysResponse)(nil),        // 27: kstash.v1.SystemRotateUnsealKeysResponse
	(*SystemSealRequest)(nil),                     // 28: kstash.v1.SystemSealRequest
	(*SystemSealResponse)(nil),                    // 29: kstash.v1.SystemSealResponse
	(*SystemStatusRequest)(nil),                   // 30: kstash.v1.SystemStatusRequest
	(*SystemStatusResponse)(nil),                  // 31: kstash.v1.SystemStatusResponse
	(*SystemUnsealRequest)(nil),                   // 32: kstash.v1.SystemUnsealRequest
	(*SystemUnsealResponse)(nil),                  // 33: kstash.v1.SystemUnsealResponse
	nil,                                           // 34: kstash.v1.Item.MapEntry
	nil,                                           // 35: kstash.v1.AccessToken.MetadataEntry
	nil,                                           // 36: kstash.v1.SystemGenerateAccessTokenRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil),                 // 37: google.protobuf.Timestamp
	(*anypb.Any)(nil),                             // 38: google.protobuf.Any
}
var file_kstash_proto_depIdxs = []int32{
	0,  // 0: kstash.v1.EncryptionKey.type:type_name -> kstash.v1.CipherType
	37, // 1: kstash.v1.EncryptionKey.created:type_name -> google.protobuf.Timestamp
	2,  // 2: kstash.v1.KeychainSnapshot.keys:type_name -> kstash.v1.EncryptionKey
	37, // 3: kstash.v1.KeychainSnapshot.created:type_name -> google.protobuf.Timestamp
	34, // 4: kstash.v1.Item.map:type_name -> kstash.v1.Item.MapEntry
	1,  // 5: kstash.v1.ACL.permissions:type_name -> kstash.v1.Permission
	35, // 6: kstash.v1.AccessToken.metadata:type_name -> kstash.v1.AccessToken.MetadataEntry
	6,  // 7: kstash.v1.AccessToken.acls:type_name -> kstash.v1.ACL
	7,  // 8: kstash.v1.AuthTokenLookupResponse.token:type_name -> kstash.v1.AccessToken
	7,  // 9: kstash.v1.AuthTokenRenewResponse.token:type_name -> kstash.v1.AccessToken
	36, // 10: kstash.v1.SystemGenerateAccessTokenRequest.metadata:type_name -> kstash.v1.SystemGenerateAccessTokenRequest.MetadataEntry
	6,  // 11: kstash.v1.SystemGenerateAccessTokenRequest.acls:type_name -> kstash.v1.ACL
	7,  // 12: kstash.v1.SystemGenerateAccessTokenResponse.token:type_name -> kstash.v1.AccessToken
	37, // 13: kstash.v1.SystemStatusResponse.serverTimestamp:type_name -> google.protobuf.Timestamp
	38, // 14: kstash.v1.Item.MapEntry.value:type_name -> google.protobuf.Any
	8,  // 15: kstash.v1.KStash.AuthTokenLookup:input_type -> kstash.v1.AuthTokenLookupRequest
	10, // 16: kstash.v1.KStash.AuthTokenRenew:input_type -> kstash.v1.AuthTokenRenewRequest
	12, // 17: kstash.v1.KStash.AuthTokenRevoke:input_type -> kstash.v1.AuthTokenRevokeRequest
	14, // 18: kstash.v1.KStash.SystemGenerateAccessToken:input_type -> kstash.v1.SystemGenerateAccessTokenRequest
	16, // 19: kstash.v1.KStash.SystemGenerateGatekeeperToken:input_type -> kstash.v1.SystemGenerateGatekeeperTokenRequest
	18, // 20: kstash.v1.KStash.SystemInitialize:input_type -> kstash.v1.SystemInitializeRequest
	20, // 21: kstash.v1.KStash.SystemRotateAccessKey:input_type -> kstash.v1.SystemRotateAccessKeyRequest
	22, // 22: kstash.v1.KStash.SystemRotateEncryptionKey:input_type -> kstash.v1.SystemRotateEncryptionKeyRequest
	24, // 23: kstash.v1.KStash.SystemRotateGatekeeperToken:input_type -> kstash.v1.SystemRotateGatekeeperTokenRequest
	28, // 24: kstash.v1.KStash.SystemSeal:input_type -> kstash.v1.SystemSealRequest
	30, // 25: kstash.v1.KStash.SystemStatus:input_type -> kstash.v1.SystemStatusRequest
	32, // 26: kstash.v1.KStash.SystemUnseal:input_type -> kstash.v1.SystemUnsealRequest
	9,  // 27: kstash.v1.KStash.AuthTokenLookup:output_type -> kstash.v1.AuthTokenLookupResponse
	11, // 28: kstash.v1.KStash.AuthTokenRenew:output_type -> kstash.v1.AuthTokenRenewResponse
	13, // 29: kstash.v1.KStash.AuthTokenRevoke:output_type -> kstash.v1.AuthTokenRevokeResponse
	15, // 30: kstash.v1.KStash.SystemGenerateAccessToken:output_type -> kstash.v1.SystemGenerateAccessTokenResponse
	17, // 31: kstash.v1.KStash.SystemGenerateGatekeeperToken:output_type -> kstash.v1.SystemGenerateGatekeeperTokenResponse
	19, // 32: kstash.v1.KStash.SystemInitialize:output_type -> kstash.v1.SystemInitializeResponse
	21, // 33: kstash.v1.KStash.SystemRotateAccessKey:output_type -> kstash.v1.SystemRotateAccessKeyResponse
	23, // 34: kstash.v1.KStash.SystemRotateEncryptionKey:output_type -> kstash.v1.SystemRotateEncryptionKeyResponse
	25, // 35: kstash.v1.KStash.SystemRotateGatekeeperToken:output_type -> kstash.v1.SystemRotateGatekeeperTokenResponse
	29, // 36: kstash.v1.KStash.SystemSeal:output_type -> kstash.v1.SystemSealResponse
	31, // 37: kstash.v1.KStash.SystemStatus:output_type -> kstash.v1.SystemStatusResponse
	33, // 38: kstash.v1.KStash.SystemUnseal:output_type -> kstash.v1.SystemUnsealResponse
	27, // [27:39] is the sub-list for method output_type
	15, // [15:27] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_kstash_proto_init() }
func file_kstash_proto_init() {
	if File_kstash_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kstash_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeychainSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthTokenLookupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthTokenLookupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthTokenRenewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthTokenRenewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthTokenRevokeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthTokenRevokeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemGenerateAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemGenerateAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemGenerateGatekeeperTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemGenerateGatekeeperTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemInitializeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemInitializeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemRotateAccessKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemRotateAccessKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemRotateEncryptionKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemRotateEncryptionKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemRotateGatekeeperTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemRotateGatekeeperTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemRotateUnsealKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemRotateUnsealKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemSealRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemSealResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemUnsealRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kstash_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemUnsealResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kstash_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kstash_proto_goTypes,
		DependencyIndexes: file_kstash_proto_depIdxs,
		EnumInfos:         file_kstash_proto_enumTypes,
		MessageInfos:      file_kstash_proto_msgTypes,
	}.Build()
	File_kstash_proto = out.File
	file_kstash_proto_rawDesc = nil
	file_kstash_proto_goTypes = nil
	file_kstash_proto_depIdxs = nil
}
